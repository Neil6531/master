{"version":3,"sources":["assets/exactt.png","container/setup/index.js","container/auth/index.js","container/dashboard/index.js","container/entry/index.js","container/users/index.js","container/customer/index.js","container/sideMenu/index.js","container/welcome/index.js","config/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Parse","require","Setup","state","confirmDirty","autoCompleteResult","UNSAFE_componentWillMount","a","async","User","logOut","console","log","Cloud","run","listOfCompany","length","props","history","push","UNSAFE_componentWillReceiveProps","handleSubmit","form","validateFieldsAndScroll","err","values","add","address","city","pincode","companyName","company","phone","name","email","licNo","licno","gstNo","gst","password","logIn","handleConfirmBlur","e","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","this","className","span","src","logo","alt","type","justify","align","onClick","handleLogout","orientation","labelCol","xs","sm","wrapperCol","Item","label","rules","required","message","hasFeedback","validator","Password","onBlur","offset","htmlType","block","Component","SetupForm","Form","create","AuthLogin","current","handelSubmit","username","then","user","catch","error","id","prefix","style","color","placeholder","onPressEnter","href","WrappedAuthLogin","Dashboard","attributes","Entry","Option","Select","confirm","Modal","AddUser","addUserVisible","deleteUserVisible","userForDelete","users","columns","title","dataIndex","key","getUsers","deleteUser","mes","handleUserSelect","dthis","content","onOk","onCancel","Query","include","find","loading","alert","addUserShowModal","addUserHandleOk","preventDefault","role","success","resetFields","addUserHandleCancel","deleteUserShowModal","deleteUserHandleOk","deleteUserHandleCancel","float","marginRight","shape","icon","ghost","dataSource","rowKey","visible","onChange","width","map","get","WrappedAddUser","Customer","SideMenu","currentUser","defaultSelectedKeys","mode","master","Welcome","getCompanyName","companyQuery","companyData","document","position","height","component","marginLeft","padding","paddingTop","path","exact","Navigation","Auth","initialize","serverURL","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a682de03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/exactt.04558f3a.png\";","import React, { Component } from \"react\";\nimport { Row, Col, Form, Input, Divider, Button } from \"antd\";\nimport logo from \"../../assets/exactt.png\";\nvar Parse = require(\"parse\");\n\nclass Setup extends Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: []\n  };\n\n  UNSAFE_componentWillMount = async () => {\n    await Parse.User.logOut();\n    console.log(\"Set Up Page\");\n    const listOfCompany = await Parse.Cloud.run(\"checkCompany\", {});\n    console.log(listOfCompany.length);\n    if (listOfCompany.length) {\n      this.props.history.push(\"/auth\");\n    }\n  };\n\n  UNSAFE_componentWillReceiveProps = () => {\n    console.log(\"Some Props\");\n  };\n\n  handleSubmit = async () => {\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        var add = {\n          address: values.address,\n          city: values.city,\n          state: values.state,\n          pincode: values.pincode\n        };\n        await Parse.Cloud.run(\"setupCompany\", {\n          companyName: values.company,\n          address: add,\n          phone: values.phone,\n          name: values.name,\n          email: values.email,\n          licNo: values.licno,\n          gstNo: values.gst,\n          password: values.password\n        });\n        await Parse.User.logIn(values.email, values.password);\n        await Parse.User.logOut();\n        const listOfCompany = await Parse.Cloud.run(\"checkCompany\", {});\n        console.log(listOfCompany.length);\n        if (listOfCompany.length) {\n          this.props.history.push(\"/auth\");\n        }\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 }\n      }\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 15,\n          offset: 6\n        }\n      }\n    };\n\n    return (\n      <Row className=\"height100\">\n          <Row className=\"header\">\n            <Col span={8}>\n              <img className=\"headerLogo\" src={logo} alt=\"exacttLogo\" />\n            </Col>\n            <Col span={8} type=\"flex\" justify=\"space-around\" align=\"middle\">\n              \n            </Col>\n            <Col span={8} type=\"flex\" justify=\"end\" align=\"stretch\">\n              <div className=\"actionButton\">\n                <span onClick={this.handleLogout} className=\"items\">\n                  \n                </span>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"container\">\n          <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n            <Col span={24} align=\"middle\">\n              {\" \"}\n              <Divider orientation=\"center\">Setup your company</Divider>\n            </Col>\n            <Col span={12}>\n              <Form {...formItemLayout}>\n                <Form.Item label=\"Company name\">\n                  {getFieldDecorator(\"company\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your company name!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Your Name\">\n                  {getFieldDecorator(\"name\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your company name!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Address\">\n                  {getFieldDecorator(\"address\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your compnay address!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"City\">\n                  {getFieldDecorator(\"city\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your city!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"State\">\n                  {getFieldDecorator(\"state\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your state!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Pin Code\">\n                  {getFieldDecorator(\"pincode\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your pin code!\"\n                      }\n                    ]\n                  })(<Input type=\"number\" />)}\n                </Form.Item>\n                <Form.Item label=\"Phone\">\n                  {getFieldDecorator(\"phone\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your phone!\"\n                      }\n                    ]\n                  })(<Input type=\"number\" />)}\n                </Form.Item>\n                <Form.Item label=\"E-mail\">\n                  {getFieldDecorator(\"email\", {\n                    rules: [\n                      {\n                        type: \"email\",\n                        message: \"The input is not valid E-mail!\"\n                      },\n                      {\n                        required: true,\n                        message: \"Please input your E-mail!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Lic. Number\">\n                  {getFieldDecorator(\"licno\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your LIC Number!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"GST Number\">\n                  {getFieldDecorator(\"gst\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your GST Number!\"\n                      }\n                    ]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Password!\"\n                      },\n                      {\n                        validator: this.validateToNextPassword\n                      }\n                    ]\n                  })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" hasFeedback>\n                  {getFieldDecorator(\"confirm\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please confirm your password!\"\n                      },\n                      {\n                        validator: this.compareToFirstPassword\n                      }\n                    ]\n                  })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    block\n                    onClick={this.handleSubmit}\n                  >\n                    Register\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Col>\n          </Row>\n        \n              \n            \n          </Row>\n        </Row>\n    );\n  }\n}\n\nconst SetupForm = Form.create({ name: \"setup\" })(Setup);\n\nexport default SetupForm;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport logo from \"../../assets/exactt.png\";\nimport { Form, Icon, Input, Button } from \"antd\";\nvar Parse = require(\"parse\");\n\nclass AuthLogin extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  UNSAFE_componentWillMount = async () => {\n    let currentUser = await Parse.User.current();\n    if (currentUser) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  handelSubmit = () => {\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        await Parse.User.logIn(values.username, values.password)\n          .then(user => {\n            console.log(user);\n            this.props.history.push(\"/dashboard\");\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Row\n        type=\"flex\"\n        justify=\"space-around\"\n        align=\"middle\"\n        className=\"height100\"\n      >\n        <Col span={6} type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <img className=\"authLogo\" src={logo} alt=\"Logo of exactt\" />\n\n          <Form id=\"components-form-normal-login\" className=\"login-form\">\n            <Form.Item>\n              {getFieldDecorator(\"username\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                  onPressEnter={this.handelSubmit}\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input.Password\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  onPressEnter={this.handelSubmit}\n                  placeholder=\"Password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                className=\"login-form-button\"\n                onClick={this.handelSubmit}\n              >\n                Log in\n              </Button>\n              <a href=\"12\">Forgot password</a>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst WrappedAuthLogin = Form.create({ name: \"AuthLogin\" })(AuthLogin);\n\nexport default WrappedAuthLogin;\n","import React, { Component } from \"react\";\nimport { Divider, Row, Col } from \"antd\";\nvar Parse = require(\"parse\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: Parse.User.current().attributes\n    };\n    console.log(this.state.user);\n  }\n  render() {\n    return (\n      <Row>\n        <Row>\n          <Col span={24}>\n            <h2>Dashboard</h2>\n          </Col>\n          <Divider />\n        </Row>\n        <Row>\n          <Col span={24}>\n            Hi, {this.state.user.name} !\n          </Col>\n        </Row>\n        \n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Divider, Row, Col } from \"antd\";\n\nexport default class Entry extends Component {\n  render() {\n    return (\n      <Row>\n        <Col span={24}>\n          <h2>Entry</h2>\n        </Col>\n        <Divider />\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Table,\n  Button,\n  Modal,\n  Form,\n  Input,\n  Select,\n  message,\n  Skeleton\n} from \"antd\";\n\nvar Parse = require(\"parse\");\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nclass AddUser extends Component {\n  state = {\n    addUserVisible: false,\n    deleteUserVisible: false,\n    userForDelete: \"\",\n    users: [],\n    columns: [\n      {\n        title: \"Name\",\n        dataIndex: \"attributes.name\",\n        key: \"name\"\n      },\n      {\n        title: \"Email\",\n        dataIndex: \"attributes.username\",\n        key: \"email\"\n      },\n      {\n        title: \"Role\",\n        dataIndex: \"attributes.role\",\n        key: \"role\"\n      }\n    ]\n  };\n\n  UNSAFE_componentWillMount = () => {\n    this.getUsers();\n  };\n\n  deleteUser = async value => {\n    await Parse.Cloud.run(\"deleteUser\", { username: value })\n      .then(mes => {\n        // console.log(mes);\n        this.getUsers();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  handleUserSelect = async value => {\n    var dthis = this;\n    await confirm({\n      title: \"Do you Want to delete these user?\",\n      content: value,\n      onOk() {\n        dthis.deleteUser(value);\n        // console.log(\"OK\");\n        dthis.setState({\n          deleteUserVisible: false\n        });\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      }\n    });\n  };\n\n  getUsers = async () => {\n    const getUsers = new Parse.Query(\"_User\");\n    getUsers.include(\"role\");\n    try {\n      let users = await getUsers.find();\n      this.setState({ users });\n      this.setState({ loading: false });\n    } catch (error) {\n      alert(error.message);\n      console.log(error);\n    }\n  };\n\n  addUserShowModal = () => {\n    this.setState({\n      addUserVisible: true\n    });\n  };\n\n  addUserHandleOk = e => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        await Parse.Cloud.run(\"addUser\", {\n          name: values.name,\n          email: values.email,\n          password: values.password,\n          role: values.role\n        })\n          .then(() => {\n            message.success(\"New user added\");\n            this.props.form.resetFields();\n            this.getUsers();\n            this.setState({\n              addUserVisible: false\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      }\n    });\n  };\n\n  addUserHandleCancel = () => {\n    this.setState({\n      addUserVisible: false\n    });\n  };\n\n  deleteUserShowModal = () => {\n    this.setState({\n      deleteUserVisible: true\n    });\n  };\n\n  deleteUserHandleOk = e => {\n    e.preventDefault();\n    this.getUsers();\n    this.setState({\n      deleteUserVisible: false\n    });\n  };\n\n  deleteUserHandleCancel = () => {\n    this.setState({\n      deleteUserVisible: false\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 18 }\n      }\n    };\n\n    return (\n      <Row>\n        <Row>\n          <Col span={18}>\n            <h2>User</h2>\n          </Col>\n          <Col span={6}>\n            <div style={{ float: \"right\" }}>\n              <Button\n                style={{ marginRight: 10 }}\n                type=\"primary\"\n                shape=\"circle\"\n                icon=\"plus\"\n                onClick={this.addUserShowModal}\n                ghost\n              />\n              <Button\n                type=\"danger\"\n                shape=\"circle\"\n                icon=\"delete\"\n                onClick={this.deleteUserShowModal}\n                ghost\n              />\n            </div>\n          </Col>\n          <Divider />\n        </Row>\n        <Row>\n          <Col span={24}>\n            {this.state.users ? (\n              <Table\n                dataSource={this.state.users}\n                columns={this.state.columns}\n                rowKey=\"id\"\n              />\n            ) : (\n              <Skeleton />\n            )}\n          </Col>\n        </Row>\n        <Modal\n          title=\"Add new user\"\n          visible={this.state.addUserVisible}\n          onOk={this.addUserHandleOk}\n          onCancel={this.addUserHandleCancel}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"Name\">\n              {getFieldDecorator(\"name\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input user name!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"E-mail\">\n              {getFieldDecorator(\"email\", {\n                rules: [\n                  {\n                    type: \"email\",\n                    message: \"The input is not valid E-mail!\"\n                  },\n                  {\n                    required: true,\n                    message: \"Please input user E-mail!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Role\">\n              {getFieldDecorator(\"role\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input user role!\"\n                  }\n                ]\n              })(\n                <Select placeholder=\"Select Role\">\n                  <Option value=\"Report Generator\">Report Generator</Option>\n                  <Option value=\"Report Analyzer\">Report Analyzer</Option>\n                  <Option value=\"HOD\">HOD</Option>\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Password\">\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input user password!\"\n                  }\n                ]\n              })(<Input.Password />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n        <Modal\n          title=\"Add new user\"\n          visible={this.state.deleteUserVisible}\n          onOk={this.deleteUserHandleOk}\n          onCancel={this.deleteUserHandleCancel}\n        >\n          Select user you want to delete\n          <Select\n            placeholder=\"Select User\"\n            onChange={this.handleUserSelect}\n            style={{ width: \"100%\" }}\n          >\n            {this.state.users.length > 0 &&\n              this.state.users.map(user =>\n                user.get(\"master\") ? (\n                  \"\"\n                ) : (\n                  <Option key={user.id} value={user.get(\"username\")}>\n                    {user.get(\"name\")} ({user.get(\"username\")})\n                  </Option>\n                )\n              )}\n          </Select>\n        </Modal>\n      </Row>\n    );\n  }\n}\n\nconst WrappedAddUser = Form.create({ name: \"addUser\" })(AddUser);\n\nexport default WrappedAddUser;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Divider } from \"antd\";\n\nclass Customer extends Component {\n  render() {\n    return (\n      <Row>\n        <Row>\n          <Col span={18}>\n            <h2>Customer</h2>\n          </Col>\n          <Col span={6}>\n            <div style={{ float: \"right\" }}>\n              <Button\n                style={{ marginRight: 10 }}\n                type=\"primary\"\n                shape=\"circle\"\n                icon=\"plus\"\n                onClick={this.addUserShowModal}\n                ghost\n              />              \n              <Button\n                type=\"danger\"\n                shape=\"circle\"\n                icon=\"delete\"\n                onClick={this.deleteUserShowModal}\n                ghost\n              />\n            </div>\n          </Col>\n          <Divider />\n        </Row>\n      </Row>\n    );\n  }\n}\n\nexport default Customer;\n","import React, { Component } from \"react\";\nimport { Icon, Menu } from \"antd\";\n\nvar Parse = require(\"parse\");\n\nexport default class SideMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentUser: Parse.User.current().attributes };\n  }\n\n  render() {\n    return (\n      <Menu\n        style={{ width: \"100%\" }}\n        defaultSelectedKeys={[\"1\"]}\n        mode=\"inline\"\n        className=\"side-menu\"\n      >\n        <Menu.Item\n          key=\"1\"\n          onClick={() => {\n            this.props.history.push(\"/dashboard\");\n          }}\n        >\n          <Icon type=\"home\" /> Dashboard\n        </Menu.Item>\n\n        {this.state.currentUser.master ? (\n          <Menu.Item\n            key=\"2\"\n            onClick={() => {\n              this.props.history.push(\"/dashboard/entry\");\n            }}\n          >\n            <Icon type=\"file-add\" /> New report entry\n          </Menu.Item>\n        ) : (\n          \" \"\n        )}\n\n        {this.state.currentUser.master ? (\n          <Menu.Item\n            key=\"3\"\n            onClick={() => {\n              this.props.history.push(\"/dashboard/adduser\");\n            }}\n          >\n            <Icon type=\"user\" /> Users\n          </Menu.Item>\n        ) : (\n          \" \"\n        )}\n        {this.state.currentUser.master ? (\n          <Menu.Item\n            key=\"4\"\n            onClick={() => {\n              this.props.history.push(\"/dashboard/customer\");\n            }}\n          >\n            <Icon type=\"team\" /> Customer\n          </Menu.Item>\n        ) : (\n          \" \"\n        )}\n      </Menu>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Icon } from \"antd\";\nimport logo from \"../../assets/exactt.png\";\n\nimport Dashboard from \"../dashboard\";\nimport Entry from \"../entry\";\nimport AddUser from \"../users\";\nimport Customer from \"../customer\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SideMenu from \"../sideMenu\";\nvar Parse = require(\"parse\");\n\nexport default class Welcome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: Parse.User.current(),\n      companyName: \"\",\n      currentUser: Parse.User.current().attributes,\n    };\n    this.getCompanyName();\n  }\n\n  getCompanyName = async () => {\n    const companyQuery = new Parse.Query(\"Company\");\n    try {\n      let company = await companyQuery.find();\n      company.map(companyData =>\n        this.setState({ companyName: companyData.get(\"companyName\") })\n      );\n      document.title = \"Exactt | \" + this.state.companyName;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  UNSAFE_componentWillMount = async () => {\n    let currentUser = await Parse.User.current();\n    if (!currentUser) {\n      this.props.history.push(\"/auth\");\n    }\n  };\n\n  handleLogout = async () => {\n    await Parse.User.logOut()\n      .then(user => {\n        this.props.history.push(\"/auth\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Row className=\"height100\">\n          <Row className=\"header\">\n            <Col span={8}>\n              <img className=\"headerLogo\" src={logo} alt=\"exacttLogo\" />\n            </Col>\n            <Col span={8} type=\"flex\" justify=\"space-around\" align=\"middle\">\n              <div className=\"companyName\">{this.state.companyName}</div>\n            </Col>\n            <Col span={8} type=\"flex\" justify=\"end\" align=\"stretch\">\n              <div className=\"actionButton\">\n                <span onClick={this.handleLogout} className=\"items\">\n                  <Icon type=\"logout\" /> Logout\n                </span>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"container\">\n            <Col span={4} style={{ position: \"fixed\", height: \"87%\" }}>\n              <Route component={SideMenu} />\n            </Col>\n            <Col\n              span={20}\n              style={{ marginLeft: \"16.66666667%\", padding: 20, paddingTop: 5 }}\n            >\n              <Route path={\"/dashboard\"} exact component={Dashboard} />\n              {this.state.currentUser.master ? (\n                <Route path={\"/dashboard/entry\"} component={Entry} />\n              ) : (\n                \"\"\n              )}\n              {this.state.currentUser.master ? (\n                <Route path={\"/dashboard/adduser\"} component={AddUser} />\n              ) : (\n                \"\"\n              )}\n              {this.state.currentUser.master ? (\n                <Route path={\"/dashboard/customer\"} component={Customer} />\n              ) : (\n                \"\"\n              )}\n            </Col>\n          </Row>\n        </Row>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Setup from \"../container/setup\";\nimport Auth from \"../container/auth\";\nimport Welcome from \"../container/welcome\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Setup} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/dashboard\" component={Welcome} />\n      </Router>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport Navigation from \"./config/Navigation\";\nimport \"./style.css\"\nvar Parse = require(\"parse\");\n\nParse.initialize(\"exactt-backend\", \"xTmunj2MHFbmykNq\", \"xTmunj2MHFbmykNq\");\n\nParse.serverURL = \"http://192.168.43.128:1337/api\";\n\nfunction App() {\n  return <Navigation />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}